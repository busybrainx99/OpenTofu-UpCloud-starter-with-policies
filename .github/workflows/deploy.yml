name: OpenTofu CI Pipeline

on:
  workflow_dispatch:

concurrency:
  group: opentofu-${{ github.ref }}
  cancel-in-progress: false # Don't cancel, wait for completion

jobs:
  opentofu:
    runs-on: ubuntu-latest
    env:
      OPENTOFU_VERSION: 1.7.0
      CONFTEST_VERSION: 0.55.0
      AWS_REGION: de-fra1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.OPENTOFU_VERSION }}

      - name: Setup Conftest
        run: |
          curl -L -o conftest.tar.gz https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz
          tar -xzf conftest.tar.gz
          chmod +x conftest
          mv conftest /usr/local/bin/

      - name: OpenTofu Init
        run: tofu init -upgrade -reconfigure
        env:
          UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
          UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: OpenTofu Validate
        run: tofu validate
        env:
          UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
          UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}

      - name: OpenTofu Plan
        run: |
          timeout 5m tofu plan -out=tfplan -detailed-exitcode -no-color
          tofu show -json tfplan > plan.json
        env:
          UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
          UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run Conftest Policy Checks
        run: conftest test plan.json -p policy/

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan
          retention-days: 7

  apply:
    needs: opentofu
    runs-on: ubuntu-latest
    env:
      OPENTOFU_VERSION: 1.7.0
      AWS_REGION: de-fra1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.OPENTOFU_VERSION }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Init
        run: tofu init -input=false
        env:
          UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
          UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Apply
        run: tofu apply -input=false -auto-approve tfplan
        env:
          UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
          UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# name: OpenTofu CI Pipeline

# on:
#   workflow_dispatch:

# jobs:
#   opentofu:
#     runs-on: ubuntu-latest

#     env:
#       OPENTOFU_VERSION: 1.7.0
#       CONFTEST_VERSION: 0.55.0
#       AWS_REGION: de-fra1
#       TF_LOG: DEBUG

#     steps:
#       # Checkout the repository
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Set up OpenTofu
#       - name: Setup OpenTofu
#         uses: opentofu/setup-opentofu@v1
#         with:
#           tofu_version: ${{ env.OPENTOFU_VERSION }}

#       # Set up Conftest
#       - name: Setup Conftest
#         run: |
#           curl -L -o conftest.tar.gz https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz
#           tar -xzf conftest.tar.gz
#           chmod +x conftest
#           mv conftest /usr/local/bin/

#       # Debug environment variables
#       - name: Debug Environment
#         run: |
#           env | grep -E 'UPCLOUD|AWS' | sort
#           echo "Checking UpCloud API connectivity..."
#           curl -u "${UPCLOUD_USERNAME}:${UPCLOUD_PASSWORD}" -s -o /dev/null -w "%{http_code}" https://api.upcloud.com/1.3/server || echo "UpCloud API request failed"
#         env:
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}

#       # Initialize OpenTofu
#       - name: OpenTofu Init
#         run: tofu init -upgrade -reconfigure
#         env:
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       # Validate OpenTofu configuration
#       - name: OpenTofu Validate
#         run: tofu validate
#         env:
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       # Generate OpenTofu plan
#       - name: OpenTofu Plan
#         run: |
#           timeout 5m tofu plan -out=tfplan -detailed-exitcode -no-color
#           tofu show -json tfplan > plan.json
#         env:
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       # Run Conftest policy checks
#       - name: Run Conftest Policy Checks
#         run: conftest test plan.json -p policy/
#         env:
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#   apply:
#     needs: opentofu
#     runs-on: ubuntu-latest
#     env:
#       OPENTOFU_VERSION: 1.7.0
#       AWS_REGION: de-fra1
#       TF_LOG: DEBUG

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup OpenTofu
#         uses: opentofu/setup-opentofu@v1
#         with:
#           tofu_version: ${{ env.OPENTOFU_VERSION }}

#       - name: Init
#         run: tofu init -input=false
#         env:
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       - name: Apply
#         env:
#           TOFU_CONFIRM: "true"
#           UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
#           UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         run: tofu apply -input=false -auto-approve tfplan
